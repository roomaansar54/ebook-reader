{
  "version": 3,
  "file": "angular-epub-viewer.umd.min.js",
  "sources": [
    "ng://angular-epub-viewer/out/angularEpubViewer.component.ts",
    "ng://angular-epub-viewer/out/angularEpubViewer.module.ts"
  ],
  "sourcesContent": [
    "import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs/BehaviorSubject\";\nimport {Subscription} from \"rxjs/Subscription\";\nimport {\n    EpubChapter,\n    EpubError,\n    EpubLocation,\n    EpubMetadata,\n    EpubPage,\n    EpubSearchResult\n} from \"./angularEpubViewer.models\";\nimport 'rxjs/add/operator/filter';\n\ndeclare const ePub: any;\n\n/**\n * AngularEpubViewer component\n */\n@Component({\n    selector: 'angular-epub-viewer',\n    template: `<div id=\"angularEpubViewerComponent\" [style.padding]=\"padding\" #angularEpubViewerComponent></div>`,\n    styles: [`\n        #angularEpubViewerComponent {\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            overflow: hidden;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AngularEpubViewerComponent implements AfterViewInit, OnDestroy {\n\n    /**\n     * Root container's DOM reference\n     */\n    @ViewChild('angularEpubViewerComponent', {read: ElementRef})\n    root: ElementRef;\n\n    /**\n     * Primary object\n     */\n    epub: any = null;\n\n    /**\n     * Current location of document's rendered part\n     */\n    currentLocation: EpubLocation = {\n        startCfi: null,\n        endCfi: null,\n        page: null,\n        chapter: null\n    };\n\n    /**\n     * Indicates whenever document is ready\n     */\n    documentReady: boolean = false;\n\n    /**\n     * Indicates whenever chapter is displayed\n     */\n    isChapterDisplayed: boolean = false;\n\n    /**\n     * Indicates whenever pagination is computing\n     */\n    computingPagination: boolean = false;\n\n    /**\n     * Indicates whenever searching text\n     */\n    searchingText: boolean = false;\n\n    /**\n     * Root container's padding in px, em, etc.\n     */\n    @Input()\n    padding: string = null;\n    /**\n     * Enables auto calculate of pagination after document is ready or viewport has been changed\n     */\n    @Input()\n    autoPagination: boolean = false;\n    /**\n     * Enables auto loading of metadata after document is ready\n     */\n    @Input()\n    autoMetadata: boolean = false;\n    /**\n     * Enables auto loading of table of contents after document is ready\n     */\n    @Input()\n    autoTOC: boolean = false;\n\n    /**\n     * Get event when document is loaded\n     */\n    @Output('onDocumentReady')\n    onDocumentReady: EventEmitter<void> = new EventEmitter<void>();\n    /**\n     * Get event when chapter is unloaded\n     */\n    @Output('onChapterUnloaded')\n    onChapterUnloaded: EventEmitter<void> = new EventEmitter<void>();\n    /**\n     * Get event when chapter is displayed\n     */\n    @Output('onChapterDisplayed')\n    onChapterDisplayed: EventEmitter<EpubChapter> = new EventEmitter<EpubChapter>();\n    /**\n     * Get event about the current location\n     */\n    @Output('onLocationFound')\n    onLocationFound: EventEmitter<EpubLocation> = new EventEmitter<EpubLocation>();\n    /**\n     * Get event about search results\n     */\n    @Output('onSearchFinished')\n    onSearchFinished: EventEmitter<EpubSearchResult[]> = new EventEmitter<EpubSearchResult[]>();\n    /**\n     * Get event about pagination\n     */\n    @Output('onPaginationComputed')\n    onPaginationComputed: EventEmitter<EpubPage[]> = new EventEmitter<EpubPage[]>();\n    /**\n     * Get event about metadata\n     */\n    @Output('onMetadataLoaded')\n    onMetadataLoaded: EventEmitter<EpubMetadata> = new EventEmitter<EpubMetadata>();\n    /**\n     * Get event about table of contents\n     */\n    @Output('onTOCLoaded')\n    onTOCLoaded: EventEmitter<EpubChapter[]> = new EventEmitter<EpubChapter[]>();\n    /**\n     * Get event when any error occurred\n     */\n    @Output('onErrorOccurred')\n    onErrorOccurred: EventEmitter<EpubError> = new EventEmitter<EpubError>();\n\n    /**\n     * Starts loading document by link only after DOM is ready\n     */\n    private _link: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n    private linkSubscription: Subscription;\n\n    private needSearchText: string = null;\n\n    private needComputePagination: boolean = false;\n\n    constructor(private zone: NgZone) {}\n\n    ngAfterViewInit() {\n        this.linkSubscription = this._link.asObservable()\n            .filter(link => link != null)\n            .subscribe(link => {\n                this.initEpub({\n                    bookPath: link\n                });\n            });\n    }\n\n    private initEpub = (properties: object) => {\n        this.destroyEpub();\n        this.epub = ePub(properties);\n        this.epub.on('book:ready', () => {\n            this.zone.run(() => {\n                this.documentReady = true;\n                this.onDocumentReady.next(null);\n                if (this.autoPagination) {\n                    this.needComputePagination = true;\n                }\n                if (this.autoMetadata) {\n                    this.loadMetadata();\n                }\n                if (this.autoTOC) {\n                    this.loadTOC();\n                }\n            });\n        });\n        this.epub.on('book:pageChanged', (location) => {\n            this.zone.run(() => {\n                if (!this.computingPagination) {\n                    this.currentLocation.page = location.anchorPage;\n                    this.onLocationFound.next(this.currentLocation);\n                }\n            });\n        });\n        this.epub.on('renderer:chapterUnloaded', () => {\n            this.zone.run(() => {\n                this.isChapterDisplayed = false;\n                this.onChapterUnloaded.next(null);\n            });\n        });\n        this.epub.on('renderer:chapterDisplayed', (chapter: EpubChapter) => {\n            this.zone.run(() => {\n                this.isChapterDisplayed = true;\n                // no label attribute here\n                chapter['label'] = null;\n                this.onChapterDisplayed.next(chapter);\n                this.currentLocation.chapter = chapter;\n                this.onLocationFound.next(this.currentLocation);\n                if (this.needComputePagination) {\n                    this.computePagination();\n                }\n            });\n        });\n        this.epub.on('renderer:resized', () => {\n            this.zone.run(() => {\n                this.needComputePagination = true;\n                if (this.autoPagination) {\n                    this.computePagination();\n                }\n            });\n        });\n        this.epub.on('renderer:visibleRangeChanged', range => {\n            this.zone.run(() => {\n                // renderer:locationChanged is a part of this event\n                this.currentLocation.startCfi = range.start;\n                this.currentLocation.endCfi = range.end;\n                this.onLocationFound.next(this.currentLocation);\n            });\n        });\n        this.epub.renderTo('angularEpubViewerComponent');\n    };\n\n    /**\n     * Opens EPUB document by link\n     * @param link\n     */\n    openLink(link: string) {\n        this._link.next(link);\n    }\n\n    /**\n     * Opens EPUB document file\n     * @param file\n     */\n    openFile(file: File) {\n        if (window['FileReader']) {\n            this.zone.runOutsideAngular(() => {\n                const reader: FileReader = new FileReader();\n                reader.onload = () => {\n                    this.zone.run(() => {\n                        this.initEpub({\n                            bookPath: reader.result\n                        });\n                    });\n                };\n                reader.onerror = () => {\n                    this.zone.run(() => {\n                        this.onErrorOccurred.emit(EpubError.READ_FILE);\n                    });\n                };\n                reader.readAsArrayBuffer(file);\n            });\n        } else {\n            this.onErrorOccurred.emit(EpubError.OPEN_FILE);\n        }\n    }\n\n    /**\n     * Navigates to the specified url or EPUB CFI or page\n     * @param location\n     */\n    goTo(location: string | number) {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        if (typeof location === \"number\") {\n            // page\n            this.epub.displayChapter(location);\n        } else if (/.*html$/.test(location)) {\n            // url\n            this.epub.goto(location);\n        } else {\n            // EPUB CFI\n            this.epub.displayChapter(location);\n        }\n    }\n\n    /**\n     * Navigates to the next page\n     */\n    nextPage() {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        this.epub.nextPage();\n    }\n\n    /**\n     * Navigates to the previous page\n     */\n    previousPage() {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        this.epub.prevPage();\n    }\n\n    /**\n     * Searches all text matches *in the current chapter*\n     * @param text\n     */\n    searchText(text: string) {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        if (!this.isChapterDisplayed) {\n            this.onErrorOccurred.emit(EpubError.NOT_DISPLAYED_CHAPTER);\n            return;\n        }\n        if (!text || text.trim().length <= 0) {\n            this.onErrorOccurred.emit(EpubError.SEARCH);\n            return;\n        }\n        if (this.searchingText) {\n            this.needSearchText = text;\n            return;\n        }\n        this.searchingText = true;\n        this.needSearchText = null;\n        this.zone.runOutsideAngular(() => {\n            const results: EpubSearchResult[] = this.epub.currentChapter.find(text.trim());\n            this.zone.run(() => {\n                this.searchingText = false;\n                if (this.needSearchText) {\n                    this.searchText(this.needSearchText);\n                } else {\n                    this.onSearchFinished.next(results);\n                }\n            });\n        });\n    }\n\n    /**\n     * Adds style to be attached to the document's body element\n     * @param style\n     * @param value\n     */\n    setStyle(style: string, value: string) {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        this.epub.setStyle(style, value);\n    }\n\n    /**\n     * Removes a style from the rendered document\n     * @param style\n     */\n    resetStyle(style: string) {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        this.epub.removeStyle(style);\n    }\n\n    /**\n     * Calculates pagination as output event\n     */\n    computePagination() {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        if (!this.isChapterDisplayed) {\n            this.onErrorOccurred.emit(EpubError.NOT_DISPLAYED_CHAPTER);\n            return;\n        }\n        if (this.computingPagination) {\n            return;\n        }\n        this.computingPagination = true;\n        this.needComputePagination = false;\n        this.zone.runOutsideAngular(() => {\n            this.epub.generatePagination()\n                .then((pages: EpubPage[]) => {\n                    const currentPage = this.epub.pagination.pageFromCfi(this.epub.getCurrentLocationCfi());\n                    this.zone.run(() => {\n                        this.computingPagination = false;\n                        if (this.needComputePagination) {\n                            this.computePagination();\n                        } else {\n                            this.onPaginationComputed.next(pages);\n                            this.currentLocation.page = currentPage;\n                            this.onLocationFound.next(this.currentLocation);\n                        }\n                    });\n                })\n                .catch(() => {\n                    this.zone.run(() => {\n                        this.computingPagination = false;\n                        this.onErrorOccurred.emit(EpubError.COMPUTE_PAGINATION);\n                    });\n                });\n        });\n    }\n\n    /**\n     * Loads metadata as output event\n     */\n    loadMetadata() {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            this.epub.getMetadata()\n                .then((metadata: EpubMetadata) => {\n                    this.zone.run(() => {\n                        this.onMetadataLoaded.next(metadata);\n                    });\n                })\n                .catch(() => {\n                    this.zone.run(() => {\n                        this.onErrorOccurred.emit(EpubError.LOAD_METADATA);\n                    });\n                });\n        });\n    }\n\n    /**\n     * Loads table of contents as output event\n     */\n    loadTOC() {\n        if (!this.documentReady) {\n            this.onErrorOccurred.emit(EpubError.NOT_LOADED_DOCUMENT);\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            this.epub.getToc()\n                .then((chapters: EpubChapter[]) => {\n                    this.zone.run(() => {\n                        this.onTOCLoaded.next(chapters);\n                    });\n                })\n                .catch(() => {\n                    this.zone.run(() => {\n                        this.onErrorOccurred.emit(EpubError.LOAD_TOC);\n                    });\n                });\n        });\n    }\n\n    private destroyEpub() {\n        this.documentReady = false;\n        this.isChapterDisplayed = false;\n        this.searchingText = false;\n        this.needSearchText = null;\n        this.computingPagination = false;\n        this.needComputePagination = false;\n        this.currentLocation = {\n            startCfi: null,\n            endCfi: null,\n            page: null,\n            chapter: null\n        };\n        if (this.epub) {\n            this.epub.destroy();\n            this.epub = null;\n        }\n    };\n\n    ngOnDestroy() {\n        if (this.linkSubscription) {this.linkSubscription.unsubscribe();}\n        this.destroyEpub();\n    }\n}\n",
    "import {NgModule} from '@angular/core';\nimport {AngularEpubViewerComponent} from './angularEpubViewer.component';\n\n@NgModule({\n  imports: [],\n  declarations: [AngularEpubViewerComponent],\n  exports: [AngularEpubViewerComponent]\n})\nexport class AngularEpubViewerModule {}\n"
  ],
  "names": [
    "AngularEpubViewerComponent",
    "zone",
    "_this",
    "this",
    "epub",
    "currentLocation",
    "startCfi",
    "endCfi",
    "page",
    "chapter",
    "documentReady",
    "isChapterDisplayed",
    "computingPagination",
    "searchingText",
    "padding",
    "autoPagination",
    "autoMetadata",
    "autoTOC",
    "onDocumentReady",
    "EventEmitter",
    "onChapterUnloaded",
    "onChapterDisplayed",
    "onLocationFound",
    "onSearchFinished",
    "onPaginationComputed",
    "onMetadataLoaded",
    "onTOCLoaded",
    "onErrorOccurred",
    "_link",
    "BehaviorSubject",
    "needSearchText",
    "needComputePagination",
    "initEpub",
    "properties",
    "destroyEpub",
    "ePub",
    "on",
    "run",
    "next",
    "loadMetadata",
    "loadTOC",
    "location",
    "anchorPage",
    "computePagination",
    "range",
    "start",
    "end",
    "renderTo",
    "prototype",
    "ngAfterViewInit",
    "linkSubscription",
    "asObservable",
    "filter",
    "link",
    "subscribe",
    "bookPath",
    "openLink",
    "openFile",
    "file",
    "window",
    "runOutsideAngular",
    "reader",
    "FileReader",
    "onload",
    "result",
    "onerror",
    "emit",
    "EpubError",
    "READ_FILE",
    "readAsArrayBuffer",
    "OPEN_FILE",
    "goTo",
    "displayChapter",
    "test",
    "goto",
    "NOT_LOADED_DOCUMENT",
    "nextPage",
    "previousPage",
    "prevPage",
    "searchText",
    "text",
    "trim",
    "length",
    "SEARCH",
    "results",
    "currentChapter",
    "find",
    "NOT_DISPLAYED_CHAPTER",
    "setStyle",
    "style",
    "value",
    "resetStyle",
    "removeStyle",
    "generatePagination",
    "then",
    "pages",
    "currentPage",
    "pagination",
    "pageFromCfi",
    "getCurrentLocationCfi",
    "catch",
    "COMPUTE_PAGINATION",
    "getMetadata",
    "metadata",
    "LOAD_METADATA",
    "getToc",
    "chapters",
    "LOAD_TOC",
    "destroy",
    "ngOnDestroy",
    "unsubscribe",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "encapsulation",
    "ViewEncapsulation",
    "None",
    "NgZone",
    "root",
    "ViewChild",
    "read",
    "ElementRef",
    "Input",
    "Output",
    "AngularEpubViewerModule",
    "NgModule",
    "imports",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
